{"version":3,"file":"link.js","sourceRoot":"","sources":["../../src/moti/link.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAsB,aAAa,EAAE,MAAM,mBAAmB,CAAA;AACrE,OAAc,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAGzC,OAAO,EAAE,OAAO,EAAgB,MAAM,yBAAyB,CAAA;AAU/D,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAU,CAAsB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IACrE,MAAM,EAAE,OAAO,EAAE,GAAG,SAAS,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;IAEhD,OAAO,CACL,KAAC,aAAa,OACR,KAAK,KACL,SAAS,EACb,OAAO,EAAE,CAAC,CAAO,EAAE,EAAE;YACnB,qCAAqC;YACrC,2EAA2E;YAC3E,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;YAElB,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;QACd,CAAC,EACD,GAAG,EAAE,GAAG,WACR,CACH,CAAA;AACH,CAAC,CAAC,CAAA;AAEF,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAA","sourcesContent":["import { MotiPressableProps, MotiPressable } from 'moti/interactions'\nimport React, { forwardRef } from 'react'\nimport type { View } from 'react-native'\n\nimport { useLink, UseLinkProps } from '../link/use-custom-link'\n\nexport type MotiLinkProps = UseLinkProps &\n  Omit<\n    MotiPressableProps,\n    // you can't pass any props that will be overridden by useLink\n    | keyof UseLinkProps\n    | keyof Pick<ReturnType<typeof useLink>, 'href' | 'accessibilityRole'>\n  >\n\nexport const MotiLink = forwardRef<View, MotiLinkProps>((props, ref) => {\n  const { onPress, ...linkProps } = useLink(props)\n\n  return (\n    <MotiPressable\n      {...props}\n      {...linkProps}\n      onPress={(e?: any) => {\n        // @ts-expect-error no event argument\n        // we let users pass an onPress prop, in case they want to preventDefault()\n        props.onPress?.(e)\n\n        onPress?.(e)\n      }}\n      ref={ref}\n    />\n  )\n})\n\nMotiLink.displayName = 'MotiLink'\n"]}