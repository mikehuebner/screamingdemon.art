/// <reference types="react" />
import type { NextPage } from 'next';
import type { AppProps } from 'next/app';
interface SolitoCustomNavigationOptions {
}
interface SolitoNavigationOptions extends SolitoCustomNavigationOptions {
    previousPagePath?: string | null;
}
declare type NavigationOptions = SolitoNavigationOptions | ((router?: AppProps['router']) => SolitoNavigationOptions);
declare type SolitoPage<P = {}, IP = P> = NextPage<P, IP> & {
    navigationOptions?: NavigationOptions;
    getLayout?: (page: React.ReactNode, options?: NavigationOptions) => React.ReactNode;
};
export declare type SolitoAppProps<P = {}> = Omit<AppProps<P>, 'Component'> & {
    Component: AppProps<P>['Component'] & {
        navigationOptions?: NavigationOptions;
        getLayout?: (page: React.ReactNode, options?: NavigationOptions) => React.ReactNode;
    };
};
export type { SolitoPage, SolitoNavigationOptions, SolitoCustomNavigationOptions, };
