/// <reference types="node" />
import type { NextRouter as NextRouterType } from 'next/router';
interface TransitionOptions {
    shallow?: boolean;
    locale?: string | false;
    scroll?: boolean;
}
export declare function useRouter(): {
    push: (url: Parameters<NextRouterType['push']>[0], as?: Parameters<NextRouterType['push']>[1], transitionOptions?: TransitionOptions | undefined) => void;
    replace: (url: Parameters<NextRouterType['replace']>[0], as?: Parameters<NextRouterType['replace']>[1], transitionOptions?: (TransitionOptions & {
        experimental?: {
            nativeBehavior?: undefined;
        } | {
            nativeBehavior: 'stack-replace';
            isNestedNavigator: boolean;
        } | undefined;
    }) | undefined) => void;
    back: () => void;
    parseNextPath: (from: string | import("url").UrlObject) => string;
};
export {};
