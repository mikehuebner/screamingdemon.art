/// <reference types="react" />
import type NextImage from 'next/image';
import type { ImageStyle, ImageProps } from 'react-native';
export declare type AccessibilityProp<key extends string> = key extends `aria-${string}` ? key : key extends `accessibility${Capitalize<string>}` ? key : never;
declare type NextImageProps = React.ComponentProps<typeof NextImage>;
export declare type SolitoImageProps = Pick<NextImageProps, AccessibilityProp<keyof NextImageProps> | 'alt' | 'blurDataURL' | 'placeholder' | 'loader' | 'priority' | 'loading' | 'sizes' | 'quality' | 'crossOrigin' | 'referrerPolicy' | 'unoptimized' | 'quality'> & {
    style?: ImageStyle;
} & ({
    src: string;
    height: number;
    width: number;
} | {
    src: Exclude<NextImageProps['src'], string> | number;
    height?: number;
    width?: number;
}) & Pick<ImageProps, 'onLayout' | 'resizeMode' | AccessibilityProp<keyof ImageProps>> & {
    onLoadingComplete?: (info: {
        height: number;
        width: number;
    }) => void;
    fill?: boolean;
};
export {};
