{"version":3,"file":"default-loader.js","sourceRoot":"","sources":["../../src/image/default-loader.ts"],"names":[],"mappings":"AAaA,MAAM,UAAU,aAAa,CAAC,EAC5B,MAAM,EACN,GAAG,EACH,KAAK,EACL,OAAO,GACoB;IAC3B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,MAAM,aAAa,GAAG,EAAE,CAAA;QAExB,yDAAyD;QACzD,IAAI,CAAC,GAAG;YAAE,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACnC,IAAI,CAAC,KAAK;YAAE,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAEvC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,MAAM,IAAI,KAAK,CACb,yBAAyB,aAAa,CAAC,IAAI,CACzC,IAAI,CACL,kGAAkG,IAAI,CAAC,SAAS,CAC/G,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CACxB,EAAE,CACJ,CAAA;SACF;QAED,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YAC5C,MAAM,IAAI,KAAK,CACb;;6BAEqB,GAAG,IAAI,CAC7B,CAAA;SACF;KACF;IAED,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/C,6BAA6B;QAC7B,OAAO,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAA;KACnC;IAED,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QAC1B,OAAO,GAAG,CAAA;KACX;IAED,OAAO,GAAG,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,QAAQ,kBAAkB,CAChE,GAAG,CACJ,MAAM,KAAK,MAAM,OAAO,IAAI,EAAE,EAAE,CAAA;AACnC,CAAC;AAED,+DAA+D;AAC/D,2DAA2D;AAC3D,0CAA0C","sourcesContent":["import { Platform } from 'react-native'\nimport { ImageConfigComplete } from './types'\n\nexport type ImageLoaderProps = {\n  src: string\n  width: number\n  quality?: number\n}\n\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n  config: Readonly<ImageConfigComplete>\n}\n\nexport function defaultLoader({\n  config,\n  src,\n  width,\n  quality,\n}: ImageLoaderPropsWithConfig): string {\n  if (process.env.NODE_ENV !== 'production') {\n    const missingValues = []\n\n    // these should always be provided but make sure they are\n    if (!src) missingValues.push('src')\n    if (!width) missingValues.push('width')\n\n    if (missingValues.length > 0) {\n      throw new Error(\n        `Solito Image requires ${missingValues.join(\n          ', '\n        )} to be provided. Make sure you pass them as props to the \\`solito/image\\` component. Received: ${JSON.stringify(\n          { src, width, quality }\n        )}`\n      )\n    }\n\n    if (src.startsWith('/') && !config.nextJsURL) {\n      throw new Error(\n        `[solito/image] Please add the \"nextJsURL\" prop to your <SolitoProvider /> to use relative paths.\n        \nError due to image source \"${src}\".`\n      )\n    }\n  }\n\n  if (src.startsWith('/') && src.endsWith('.svg')) {\n    // relative SVG paths are raw\n    return `${config.nextJsURL}${src}`\n  }\n\n  if (src.startsWith('http')) {\n    return src\n  }\n\n  return `${config.nextJsURL}${config.path}?url=${encodeURIComponent(\n    src\n  )}&w=${width}&q=${quality || 75}`\n}\n\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\n// defaultLoader.__next_img_default = true\n"]}