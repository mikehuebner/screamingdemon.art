{"version":3,"file":"image.web.js","sourceRoot":"","sources":["../../../src/image/expo/image.web.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AACZ,OAAO,SAAS,MAAM,YAAY,CAAA;AAClC,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAClC,OAAO,EAA0B,UAAU,EAAE,MAAM,cAAc,CAAA;AACjE,iCAAiC;AACjC,OAAO,EAAE,sBAAsB,EAAE,MAAM,kBAAkB,CAAA;AAEzD,gFAAgF;AAChF,uDAAuD;AACvD,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAA;AAGlD,MAAM,WAAW,GAAG,UAAU,CAA0B,SAAS,WAAW,CAC1E,EAAE,UAAU,GAAG,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,KAAK,EAAE,EAC3D,GAAG;IAEH,MAAM,EAAE,MAAM,EAAE,GAAG,qBAAqB,EAAE,CAAA;IAC1C,6FAA6F;IAC7F,uCAAuC;IACvC,oBAAoB;IACpB,uHAAuH;IACvH,cAAc;IACd,aAAa;IACb,IAAI;IACJ,OAAO,sBAAsB,CAAC,SAAS,EAAE;QACvC,GAAG,KAAK;QACR,mCAAmC;QACnC,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,MAAM;QAC9B,IAAI;QACJ,KAAK,EAAE;YACL,IAAI,IAAI,UAAU,CAAC,YAAY;YAC/B;gBACE,SAAS,EAAE,uBAAuB,CAAC,UAAU,CAAC;aAC/C;YACD,KAAK;SACN;KACF,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,eAAe,WAAW,CAAA;AAE1B,MAAM,uBAAuB,GAAG,CAAC,UAA2B,EAAE,EAAE;IAC9D,IAAI,UAAU,KAAK,OAAO,EAAE;QAC1B,OAAO,OAAO,CAAA;KACf;IACD,IAAI,UAAU,KAAK,SAAS,EAAE;QAC5B,OAAO,SAAS,CAAA;KACjB;IACD,IAAI,UAAU,KAAK,SAAS,EAAE;QAC5B,OAAO,MAAM,CAAA;KACd;IACD,IAAI,UAAU,KAAK,QAAQ,EAAE;QAC3B,OAAO,MAAM,CAAA;KACd;IAED,MAAM,IAAI,KAAK,CAAC,sCAAsC,UAAU,EAAE,CAAC,CAAA;AACrE,CAAC,CAAA","sourcesContent":["'use client'\nimport NextImage from 'next/image'\nimport { forwardRef } from 'react'\nimport { Image, ImageResizeMode, StyleSheet } from 'react-native'\n// @ts-expect-error missing types\nimport { unstable_createElement } from 'react-native-web'\n\n// import useElementLayout from 'react-native-web/dist/modules/useElementLayout'\n// import { mergeRefs } from '../../helpers/merge-refs'\nimport { useSolitoImageContext } from '../context'\nimport { SolitoImageProps } from '../image.types'\n\nconst SolitoImage = forwardRef<Image, SolitoImageProps>(function SolitoImage(\n  { resizeMode = 'contain', fill, style, onLayout, ...props },\n  ref\n) {\n  const { loader } = useSolitoImageContext()\n  // add back onLayout when this is solved: https://github.com/vercel/next.js/discussions/43267\n  // const localRef = useRef<Image>(null)\n  // useElementLayout(\n  //   // https://github.com/necolas/react-native-web/blob/master/packages/react-native-web/src/exports/View/index.js#L88\n  //   localRef,\n  //   onLayout\n  // )\n  return unstable_createElement(NextImage, {\n    ...props,\n    // ref: mergeRefs([ref, localRef]),\n    loader: props.loader ?? loader,\n    fill,\n    style: [\n      fill && StyleSheet.absoluteFill,\n      {\n        objectFit: objectFitFromResizeMode(resizeMode),\n      },\n      style,\n    ],\n  })\n})\n\nexport default SolitoImage\n\nconst objectFitFromResizeMode = (resizeMode: ImageResizeMode) => {\n  if (resizeMode === 'cover') {\n    return 'cover'\n  }\n  if (resizeMode === 'contain') {\n    return 'contain'\n  }\n  if (resizeMode === 'stretch') {\n    return 'fill'\n  }\n  if (resizeMode === 'center') {\n    return 'none'\n  }\n\n  throw new Error(`[solito/image] Invalid resizeMode: ${resizeMode}`)\n}\n"]}