{"version":3,"file":"helpers.test.js","sourceRoot":"","sources":["../../src/image/helpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolveSourceFromImgAttributes } from './helpers'\n\ndescribe('resolveSourceFromImgAttributes', () => {\n  test('picks from max-width', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 100,\n          height: 100,\n        },\n        srcSet: `elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w`,\n        sizes: `(max-width: 600px) 480px, 800px`,\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy-480w.jpg')\n  })\n\n  test('trims excess space', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 100,\n          height: 100,\n        },\n        srcSet: `elva-fairy-480w.jpg 480w, \n        \n    elva-fairy-800w.jpg 800w`,\n        sizes: `(max-width: 600px) 480px, \n        800px`,\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy-480w.jpg')\n  })\n\n  test('picks from min-width', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 700,\n          height: 700,\n        },\n        srcSet: `elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w`,\n        sizes: `(min-width: 600px) 480px, 800px`,\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy-480w.jpg')\n  })\n\n  test('100vw size is treated as dimensions width', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 700,\n          height: 700,\n        },\n        srcSet: `elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w`,\n        sizes: `100vw`,\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy-800w.jpg')\n  })\n\n  test('100vw falls back to src', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 900,\n          height: 900,\n        },\n        srcSet: `elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w`,\n        sizes: `100vw`,\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy.jpg')\n  })\n\n  test('falls back to last value in sizes', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 700,\n          height: 700,\n        },\n        srcSet: `elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w`,\n        sizes: `(max-width: 600px) 480px, 800px`,\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy-800w.jpg')\n  })\n\n  test('uses src if missing rest', () => {\n    expect(\n      resolveSourceFromImgAttributes({\n        dimensions: {\n          width: 700,\n          height: 700,\n        },\n        src: 'elva-fairy.jpg',\n      }).uri\n    ).toBe('elva-fairy.jpg')\n  })\n\n  test('throws for 1x, 2x', () => {\n    expect(\n      () =>\n        resolveSourceFromImgAttributes({\n          dimensions: {\n            width: 700,\n            height: 700,\n          },\n          srcSet: `elva-fairy-480w.jpg 1x, elva-fairy-800w.jpg 2x`,\n          sizes: `(max-width: 600px) 480px, 800px`,\n          src: 'elva-fairy.jpg',\n        }).uri\n    ).toThrow()\n  })\n})\n"]}